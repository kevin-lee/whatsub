"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[905],{6436:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"whatsub/convert-charset","title":"Convert Charset","description":"Conversion","source":"@site/docs/whatsub/convert-charset.mdx","sourceDirName":"whatsub","slug":"/whatsub/convert-charset","permalink":"/docs/whatsub/convert-charset","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1745000348000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"Get Whatsub","permalink":"/docs/whatsub/get-whatsub"},"next":{"title":"Convert Subtitles","permalink":"/docs/whatsub/convert-sub"}}');var r=n(4848),a=n(8453),o=n(9065);const l={sidebar_position:2},c="Convert Charset",i={},h=[{value:"Conversion",id:"conversion",level:2},{value:"All Available Charsets",id:"all-available-charsets",level:2},{value:"Help",id:"help",level:2},{value:"charset",id:"charset",level:3},{value:"charset convert",id:"charset-convert",level:3},{value:"charset list",id:"charset-list",level:3}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"convert-charset",children:"Convert Charset"})}),"\n","\n",(0,r.jsx)(s.h2,{id:"conversion",children:"Conversion"}),"\n",(0,r.jsxs)(s.p,{children:["Is your subtitle file not encoded in ",(0,r.jsx)(s.code,{children:"UTF-8"})," (or another charset you want) and causing a problem?\nYou can use whatsub to re-encode in ",(0,r.jsx)(s.code,{children:"UTF-8"})," or another charset you want."]}),"\n",(0,r.jsxs)(s.p,{children:["For instance, if a sub file named ",(0,r.jsx)(s.code,{children:"some-sub.smi"})," is encoded in ",(0,r.jsx)(o.A,{color:"#25c2a0",children:"Windows-949"})," and you want to re-encode it in ",(0,r.jsx)(o.A,{color:"#1877F2",children:"UTF-8"}),",\nYou can simply use ",(0,r.jsx)(s.code,{children:"whatsub charset convert"})," command."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"whatsub charset convert --from Windows-949 --to UTF-8 some-sub.smi some-sub-utf8.smi\n"})}),"\n",(0,r.jsx)(s.p,{children:"Or"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"whatsub charset convert -f Windows-949 -t UTF-8 some-sub.smi some-sub-utf8.smi\n"})}),"\n",(0,r.jsx)(s.p,{children:"Or"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"whatsub charset convert -f Windows-949 some-sub.smi some-sub-utf8.smi\n"})}),"\n",(0,r.jsxs)(s.p,{children:["If ",(0,r.jsx)(s.code,{children:"--to"})," or ",(0,r.jsx)(s.code,{children:"-t"})," is missing the default value is ",(0,r.jsx)(s.code,{children:"UTF-8"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"all-available-charsets",children:"All Available Charsets"}),"\n",(0,r.jsxs)(s.p,{children:["Would you like to see the list charsets supported by ",(0,r.jsx)(o.A,{color:"#1877F2",children:"whatsub"}),"? Just runt ",(0,r.jsx)(s.code,{children:"whatsub charset list"})]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"whatsub charset list\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"== List of available charsets ==\nBig5\nBig5-HKSCS\nCESU-8\nEUC-JP\nEUC-KR\nGB18030\nGB2312\nGBK\n# ... omitted\nx-windows-874\nx-windows-949\nx-windows-950\nx-windows-iso2022jp\n"})}),"\n",(0,r.jsx)(s.h2,{id:"help",children:"Help"}),"\n",(0,r.jsx)(s.h3,{id:"charset",children:"charset"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"whatsub charset --help\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"Usage:\n  Whatsub charset (list ARGS... | convert ARGS...) [-h|--help HELP]\n\nCharset conversion\n\nAvailable options:\n  -h|--help HELP          Prints the synopsis and a list of options and arguments.\n\n\nAvailable commands:\n  list                    List all available charsets\n  convert                 Convert charset to another\n"})}),"\n",(0,r.jsx)(s.h3,{id:"charset-convert",children:"charset convert"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"whatsub charset convert --help\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"Usage:\n  Whatsub charset convert -f|--from <from> [-t|--to <to>] <src> [<out>] [-h|--help HELP]\n\nConvert charset to another\n\nAvailable options:\n  -f|--from <from>        The name of charset to be converted from (e.g. Windows-949 for\n                          Korean charset)\n  -t|--to <to>            The name of charset to be converted to (default: UTF-8)\n  -h|--help HELP          Prints the synopsis and a list of options and arguments.\n\nPositional arguments:\n  <src>                   The source subtitle file\n  <out>                   An optional output subtitle file. If missing, the result is printed\n                          out.\n"})}),"\n",(0,r.jsx)(s.h3,{id:"charset-list",children:"charset list"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"whatsub charset list --help\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"Usage:\n  Whatsub charset list [-h|--help HELP]\n\nList all available charsets\n\nAvailable options:\n  -h|--help HELP          Prints the synopsis and a list of options and arguments.\n"})})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var t=n(6540);const r={},a=t.createContext(r);function o(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(a.Provider,{value:s},e.children)}},9065:(e,s,n)=>{n.d(s,{A:()=>r});n(6540);var t=n(4848);const r=e=>{let{children:s,color:n}=e;return(0,t.jsx)("span",{style:{backgroundColor:n,borderRadius:"10px",color:"#fff",padding:"5px"},children:s})}}}]);