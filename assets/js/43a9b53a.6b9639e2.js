"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[342],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=c(n),d=a,m=h["".concat(i,".").concat(d)]||h[d]||p[d]||s;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=h;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<s;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},2969:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.color;return r.createElement("span",{style:{backgroundColor:n,borderRadius:"10px",color:"#fff",padding:"5px"}},t)}},1849:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return h}});var r=n(7462),a=n(3366),s=(n(7294),n(3905)),o=n(2969),l=["components"],i={sidebar_position:2},c="Convert Charset",u={unversionedId:"whatsub/convert-charset",id:"whatsub/convert-charset",title:"Convert Charset",description:"Conversion",source:"@site/docs/whatsub/convert-charset.mdx",sourceDirName:"whatsub",slug:"/whatsub/convert-charset",permalink:"/docs/whatsub/convert-charset",draft:!1,tags:[],version:"current",lastUpdatedAt:1706271539,formattedLastUpdatedAt:"1/26/2024",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Get Whatsub",permalink:"/docs/whatsub/get-whatsub"},next:{title:"Convert Subtitles",permalink:"/docs/whatsub/convert-sub"}},p={},h=[{value:"Conversion",id:"conversion",level:2},{value:"All Available Charsets",id:"all-available-charsets",level:2},{value:"Help",id:"help",level:2},{value:"charset",id:"charset",level:3},{value:"charset convert",id:"charset-convert",level:3},{value:"charset list",id:"charset-list",level:3}],d={toc:h};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"convert-charset"},"Convert Charset"),(0,s.kt)("h2",{id:"conversion"},"Conversion"),(0,s.kt)("p",null,"Is your subtitle file not encoded in ",(0,s.kt)("inlineCode",{parentName:"p"},"UTF-8")," (or another charset you want) and causing a problem?\nYou can use whatsub to re-encode in ",(0,s.kt)("inlineCode",{parentName:"p"},"UTF-8")," or another charset you want."),(0,s.kt)("p",null,"For instance, if a sub file named ",(0,s.kt)("inlineCode",{parentName:"p"},"some-sub.smi")," is encoded in ",(0,s.kt)(o.Z,{color:"#25c2a0",mdxType:"Highlight"},"Windows-949")," and you want to re-encode it in ",(0,s.kt)(o.Z,{color:"#1877F2",mdxType:"Highlight"},"UTF-8"),",\nYou can simply use ",(0,s.kt)("inlineCode",{parentName:"p"},"whatsub charset convert")," command."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"whatsub charset convert --from Windows-949 --to UTF-8 some-sub.smi some-sub-utf8.smi\n")),(0,s.kt)("p",null,"Or"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"whatsub charset convert -f Windows-949 -t UTF-8 some-sub.smi some-sub-utf8.smi\n")),(0,s.kt)("p",null,"Or "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"whatsub charset convert -f Windows-949 some-sub.smi some-sub-utf8.smi\n")),(0,s.kt)("p",null,"If ",(0,s.kt)("inlineCode",{parentName:"p"},"--to")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"-t")," is missing the default value is ",(0,s.kt)("inlineCode",{parentName:"p"},"UTF-8"),"."),(0,s.kt)("h2",{id:"all-available-charsets"},"All Available Charsets"),(0,s.kt)("p",null,"Would you like to see the list charsets supported by ",(0,s.kt)(o.Z,{color:"#1877F2",mdxType:"Highlight"},"whatsub"),"? Just runt ",(0,s.kt)("inlineCode",{parentName:"p"},"whatsub charset list")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"whatsub charset list\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"== List of available charsets ==\nBig5\nBig5-HKSCS\nCESU-8\nEUC-JP\nEUC-KR\nGB18030\nGB2312\nGBK\n# ... omitted\nx-windows-874\nx-windows-949\nx-windows-950\nx-windows-iso2022jp\n")),(0,s.kt)("h2",{id:"help"},"Help"),(0,s.kt)("h3",{id:"charset"},"charset"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"whatsub charset --help\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"Usage:\n  Whatsub charset (list ARGS... | convert ARGS...) [-h|--help HELP]\n\nCharset conversion\n\nAvailable options:\n  -h|--help HELP          Prints the synopsis and a list of options and arguments.\n\n\nAvailable commands:\n  list                    List all available charsets\n  convert                 Convert charset to another\n")),(0,s.kt)("h3",{id:"charset-convert"},"charset convert"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"whatsub charset convert --help\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"Usage:\n  Whatsub charset convert -f|--from <from> [-t|--to <to>] <src> [<out>] [-h|--help HELP]\n\nConvert charset to another\n\nAvailable options:\n  -f|--from <from>        The name of charset to be converted from (e.g. Windows-949 for\n                          Korean charset)\n  -t|--to <to>            The name of charset to be converted to (default: UTF-8)\n  -h|--help HELP          Prints the synopsis and a list of options and arguments.\n\nPositional arguments:\n  <src>                   The source subtitle file\n  <out>                   An optional output subtitle file. If missing, the result is printed\n                          out.\n")),(0,s.kt)("h3",{id:"charset-list"},"charset list"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"whatsub charset list --help\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"Usage:\n  Whatsub charset list [-h|--help HELP]\n\nList all available charsets\n\nAvailable options:\n  -h|--help HELP          Prints the synopsis and a list of options and arguments.\n")))}m.isMDXComponent=!0}}]);